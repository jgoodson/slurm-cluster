---
- name: Configure NFS Server
  hosts: nfs
  become: true
  pre_tasks:
  - name: Partition storage drive
    community.general.parted:
      device: /dev/vda
      number: 1
      flags: [lvm]
      state: present
  - name: Create storage filesystem
    community.general.filesystem:
      fstype: ext4
      dev: /dev/vda1
      state: present
  - name: Ensure mount point is present
    ansible.builtin.file:
      path: /mnt/storage
      state: directory
  - name: Mount storage filesystem
    ansible.posix.mount:
      fstype: ext4
      src: /dev/vda1
      path: /mnt/storage
      state: mounted
  - name: Ensure NFS mount points are present
    ansible.builtin.file:
      path: "/mnt/storage/{{ item }}"
      state: directory
    loop:
      - "homes"
      - "data"
  - name: Copy default user homedir
    ansible.builtin.command: rsync -a /home/ /mnt/storage/homes/
  roles: 
    - role: geerlingguy.nfs
      state: present
      vars:
        nfs_exports: [
          "/mnt/storage/homes *(rw,sync,no_root_squash,sec=sys:krb5)",
          "/mnt/storage/data *(rw,sync,no_root_squash,sec=sys:krb5)"]
  tags:
    - server
    - nfs

- name: Configure NFS Service Principals
  hosts: ipaclient
  become: true
  vars_files:
    - vault.yml
  tasks:
      # Ensure service is present
    - name: Create NFS Service for host
      freeipa.ansible_freeipa.ipaservice:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "nfs/{{ name }}"
        state: present
    - name: Log In
      shell: echo "{{ ipaadmin_password }}" | kinit admin
    - name: Store service keytab
      shell: ipa-getkeytab -s ipamaster.cluster.local -k /etc/krb5.keytab -p nfs/{{ name }}
    - name: Enable rpc-gssd service
      ansible.builtin.service:
        name: rpc-gssd
        enabled: yes
        state: started
  tags:
    - nfs
    - client

- name: Configure automounts
  hosts: ipaserver
  become: true
  vars_files:
    - vault.yml
  tasks:
    - name: Create data mount key
      freeipa.ansible_freeipa.ipaautomountkey:
        ipaadmin_password: "{{ ipaadmin_password }}"
        location: default
        mapname: auto.direct
        key: /data
        info: -fstype=nfs4,sec=krb5,soft,rsize=8192,wsize=8192 nfs1.cluster.local:/mnt/storage/data
        state: present
    - name: Create home mount key
      freeipa.ansible_freeipa.ipaautomountkey:
        ipaadmin_password: "{{ ipaadmin_password }}"
        location: default
        mapname: auto.direct
        key: /home
        info: -fstype=nfs4,sec=krb5,soft,rsize=8192,wsize=8192 nfs1.cluster.local:/mnt/storage/data
        state: present
  when: nfs_automount
  tags:
    - nfs
    - automount
    - keys

- name: Enable NFS Automounts
  hosts: ipaclient
  become: true
  vars_files:
    - vault.yml
  tasks:
    - name: Configure ipa automount
      ansible.builtin.shell: ipa-client-automount -U; echo
    - name: restart autofs
      ansible.builtin.service:
        name: autofs
        state: restarted
  when: nfs_automount
  tags:
    - nfs
    - client
    - automount

- name: Put NFS in fstab
  hosts: ipaclient
  become: true
  vars_files:
    - vault.yml
  tasks:
    - name: mount /home
      ansible.posix.mount:
        path: /home
        src: nfs1.cluster.local:/mnt/storage/data
        fstype: nfs4
        opts: vers=4.2,sec=krb5,soft,rsize=8192,wsize=8192
        state: present
    - name: mount /data
      ansible.posix.mount:
        path: /data
        src: nfs1.cluster.local:/mnt/storage/data
        fstype: nfs4
        opts: vers=4.2,sec=krb5,soft,rsize=8192,wsize=8192
        state: present


  when: not nfs_automount
    tags:
    - nfs
    - client
    - automount